#!/bin/bash

# Cosmos Wallet Automation - –°—Ç–∞—Ä—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∏ –∑–∞–ø—É—Å–∫

set -e

echo " "
echo "üöÄ ================================"
echo "üöÄ  Cosmos Wallet Automation    "
echo "üöÄ ================================"
echo " "

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 16+"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ gaiad
if ! command -v gaiad &> /dev/null; then
    echo "‚ùå gaiad –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Cosmos SDK CLI"
    echo "   wget https://github.com/cosmos/gaia/releases/latest/download/gaiad-linux-amd64"
    echo "   sudo mv gaiad-linux-amd64 /usr/local/bin/gaiad"
    echo "   sudo chmod +x /usr/local/bin/gaiad"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ jq
if ! command -v jq &> /dev/null; then
    echo "‚ùå jq –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq"
    echo "   sudo apt-get install jq"
    exit 1
fi

echo "‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ -f "requirements.txt" ]; then
    pip install -q -r requirements.txt
    echo "‚úÖ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üü° –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ -f "package.json" ]; then
    if [ ! -d "node_modules" ]; then
        echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        npm install
    fi
    echo "‚úÖ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≥–æ—Ç–æ–≤—ã"
else
    echo "‚ùå –§–∞–π–ª package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ—à–µ–ª—å–∫–æ–≤
echo "üíº –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ—à–µ–ª—å–∫–æ–≤..."
if [ ! -f "okx_wallets" ] && [ ! -f "bitget_wallets" ]; then
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –∫–æ—à–µ–ª—å–∫–æ–≤!"
    echo "   –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª—ã okx_wallets –∏/–∏–ª–∏ bitget_wallets"
    echo "   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏–º–µ—Ä—ã: okx_wallets.example, bitget_wallets.example"
    exit 1
fi

# –ü–æ–¥—Å—á–µ—Ç –∞–¥—Ä–µ—Å–æ–≤ –≤ —Ñ–∞–π–ª–∞—Ö
if [ -f "okx_wallets" ]; then
    OKX_COUNT=$(grep -c "^cosmos1" okx_wallets || echo "0")
    echo "üìä OKX –∫–æ—à–µ–ª—å–∫–æ–≤: $OKX_COUNT"
else
    OKX_COUNT=0
fi

if [ -f "bitget_wallets" ]; then
    BITGET_COUNT=$(grep -c "^cosmos1" bitget_wallets || echo "0")
    echo "üìä Bitget –∫–æ—à–µ–ª—å–∫–æ–≤: $BITGET_COUNT"
else
    BITGET_COUNT=0
fi

TOTAL_WALLETS=$((OKX_COUNT + BITGET_COUNT))
if [ $TOTAL_WALLETS -lt 119 ]; then
    echo "‚ö†Ô∏è  –í—Å–µ–≥–æ –∞–¥—Ä–µ—Å–æ–≤: $TOTAL_WALLETS (—Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 119 –¥–ª—è –∫–∞–∂–¥–æ–π –±–∏—Ä–∂–∏)"
    echo "   –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∞–¥—Ä–µ—Å–æ–≤ –≤ —Ñ–∞–π–ª—ã –∫–æ—à–µ–ª—å–∫–æ–≤"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ keyring
echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—à–µ–ª—å–∫–æ–≤ –≤ keyring..."
KEYRING_COUNT=$(gaiad keys list 2>/dev/null | grep -c "name:" || echo "0")
echo "üìä –ö–æ—à–µ–ª—å–∫–æ–≤ –≤ keyring: $KEYRING_COUNT"

if [ $KEYRING_COUNT -lt 119 ]; then
    echo "‚ö†Ô∏è  –í keyring –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ—à–µ–ª—å–∫–æ–≤ (—Ç—Ä–µ–±—É–µ—Ç—Å—è 119)"
    echo "   –î–æ–±–∞–≤—å—Ç–µ –∫–æ—à–µ–ª—å–∫–∏ –∫–æ–º–∞–Ω–¥–æ–π: gaiad keys add WalletX --recover"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p logs

# –ü—Ä–æ–≤–µ—Ä–∫–∞ RPC —É–∑–ª–æ–≤
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è RPC —É–∑–ª–æ–≤..."
npm run health-check

echo " "
echo "üéØ ================================"
echo "üéØ  –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ó–ê–ü–£–°–ö–£     "
echo "üéØ ================================"
echo " "

# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞
echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:"
echo "1) üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º (DRY_RUN=true)"
echo "2) üöÄ –†–∞–±–æ—á–∏–π —Ä–µ–∂–∏–º"
echo "3) üìä –¢–æ–ª—å–∫–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
echo "4) ‚öôÔ∏è  –¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞ –≥–∞–∑–∞"
echo " "
read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): " choice

case $choice in
    1)
        echo "üß™ –ó–∞–ø—É—Å–∫ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ..."
        export DRY_RUN=true
        python3 script.py
        ;;
    2)
        echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–∞–±–æ—á–µ–º —Ä–µ–∂–∏–º–µ..."
        echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ë—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏!"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " confirm
        if [[ $confirm =~ ^[Yy]$ ]]; then
            export DRY_RUN=false
            python3 script.py
        else
            echo "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        fi
        ;;
    3)
        echo "üìä –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
        npm run monitor
        ;;
    4)
        echo "‚öôÔ∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –≥–∞–∑–∞..."
        echo "–¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞ –≥–∞–∑–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è –Ω–∞–≥—Ä–∞–¥:"
        ./calculate_gas.sh
        echo " "
        echo "–¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞ –≥–∞–∑–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:"
        ./calculate_send_gas.sh
        echo " "
        echo "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π JS —Ä–∞—Å—á–µ—Ç:"
        npm run gas-withdraw
        npm run gas-send
        ;;
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac

echo " "
echo "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üìã –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ logs/"